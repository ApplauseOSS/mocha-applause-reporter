!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("mocha"),require("auto-api-client-js"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["mocha","auto-api-client-js","fs","path"],e):(t="undefined"!=typeof globalThis?globalThis:t||self)["mocha-applause-reporter"]=e(t.mocha,t.autoApiClientJs,t.fs,t.path)}(this,(function(t,e,s,i){"use strict";const a=require(process.cwd()+"/applause.json");class n extends t.reporters.Base{get isSynchronised(){return void 0!==this.autoapi&&0===this.autoapi.getCallsInFlight}constructor(s){super(s),this.TEST_RAIL_CASE_ID_PREFIX="TestRail-",this.APPLAUSE_CASE_ID_PREFIX="Applause-",this.testRunId=Promise.resolve(0),this.uidToResultIdMap={},this.uidSubmissionMap={},this.autoapi=new e.AutoApi({clientConfig:{baseUrl:a.baseUrl,apiKey:a.apiKey},productId:a.productId,testRailOptions:a.testRail}),s.once(t.Runner.constants.EVENT_SUITE_BEGIN,(t=>{const e=[];t.eachTest((t=>e.push(this.parseTestCaseName(t.fullTitle()).testCaseName))),this.runnerStart(e)})),s.on(t.Runner.constants.EVENT_TEST_BEGIN,(t=>{this.startTestResult(t.id,t.fullTitle())})).on(t.Runner.constants.EVENT_TEST_PASS,(t=>{this.submitTestResult(t.id,e.TestResultStatus.PASSED)})).on(t.Runner.constants.EVENT_TEST_FAIL,((t,s)=>{this.submitTestResult(t.id,e.TestResultStatus.FAILED,s.message)})).once(t.Runner.constants.EVENT_RUN_END,(()=>{this.runnerEnd()}))}runnerStart(t){this.testRunId=this.autoapi.startTestRun({tests:t}).then((t=>{const s=t.data.runId;return console.log("Test Run %d initialized",s),this.heartbeat=new e.TestRunHeartbeatService(s,this.autoapi),this.heartbeat.start(),s}))}startTestResult(t,e){const s=this.parseTestCaseName(e);this.uidToResultIdMap[t]=this.testRunId?.then((t=>this.autoapi.startTestCase({testCaseName:s.testCaseName,testCaseId:s.testRailTestCaseId,testRunId:t,providerSessionIds:[]}))).then((t=>t.data.testResultId))}submitTestResult(t,e,s){this.uidSubmissionMap[t]=this.uidToResultIdMap[t]?.then((t=>this.autoapi.submitTestResult({status:e,testResultId:t,failureReason:s})))}async runnerEnd(){await(this.heartbeat?.end());let t=[];const e=Object.values(this.uidToResultIdMap);await Promise.all(e).then((e=>t=null==e?[]:e)).catch((t=>{console.error(`Unable to retrieve Applause TestResultIds ${t.message}`)}));const a=Object.values(this.uidSubmissionMap);await Promise.all(a),await this.autoapi.endTestRun(await this.testRunId||0);const n=(await this.autoapi.getProviderSessionLinks(t)).data||[];if(n.length>0){console.info(JSON.stringify(n));const t=".";s.writeFileSync(i.join(t,"providerUrls.txt"),JSON.stringify(n,null,1))}}parseTestCaseName(t){const e=t.split(" ");let s,i;return e.forEach((t=>{t?.startsWith(this.TEST_RAIL_CASE_ID_PREFIX)?(void 0!==s&&console.warn("Multiple TestRail case ids detected in testCase name"),s=t.substring(this.TEST_RAIL_CASE_ID_PREFIX.length)):t?.startsWith(this.APPLAUSE_CASE_ID_PREFIX)&&(void 0!==i&&console.warn("Multiple Applause case ids detected in testCase name"),i=t.substring(this.APPLAUSE_CASE_ID_PREFIX.length))})),{applauseTestCaseId:i,testRailTestCaseId:s,testCaseName:e.filter((t=>t!==`${this.TEST_RAIL_CASE_ID_PREFIX}${s||""}`)).filter((t=>t!==`${this.APPLAUSE_CASE_ID_PREFIX}${i||""}`)).join(" ")}}}return n}));
//# sourceMappingURL=index.min.js.map
