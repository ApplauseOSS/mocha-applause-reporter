!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("mocha"),require("auto-api-client-js"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["mocha","auto-api-client-js","fs","path"],e):(t="undefined"!=typeof globalThis?globalThis:t||self)["mocha-applause-reporter"]=e(t.mocha,t.autoApiClientJs,t.fs,t.path)}(this,(function(t,e,s,o){"use strict";const i=require(process.cwd()+"/applause.json");class n extends t.reporters.Base{get isSynchronised(){return void 0!==this.autoapi&&0===this.autoapi.getCallsInFlight}constructor(n){super(n),this.uidToResultIdMap={},this.autoapi=new e.AutoApi({clientConfig:{baseUrl:i.baseUrl,apiKey:i.apiKey},productId:i.productId,groupingName:i.groupingName}),n.once(t.Runner.constants.EVENT_RUN_BEGIN,(()=>{console.log("run start")})).on(t.Runner.constants.EVENT_TEST_BEGIN,(t=>{console.log("test begin"),this.uidToResultIdMap[t.id]=this.autoapi.startTestCase(t.fullTitle()).then((t=>t.data.testResultId))})).on(t.Runner.constants.EVENT_TEST_PASS,(async t=>{console.log("test pass"),this.autoapi.submitTestResult(await this.uidToResultIdMap[t.id],e.TestResultStatus.PASSED)})).on(t.Runner.constants.EVENT_TEST_FAIL,(async(t,s)=>{console.log("test fail"),this.autoapi.submitTestResult(await this.uidToResultIdMap[t.id],e.TestResultStatus.FAILED,s.message)})).once(t.Runner.constants.EVENT_RUN_END,(async()=>{console.log("run end");const t=Object.values(this.uidToResultIdMap);let e=[];await Promise.all(t).then((t=>e=null==t?[]:t)).catch((t=>console.error(`Unable to retrieve Applause TestResultIds ${t}`)));const i=(await this.autoapi.getProviderSessionLinks(e)).data||[];if(i.length>0){console.info(JSON.stringify(i));const t=".";s.writeFileSync(o.join(t,"providerUrls.txt"),JSON.stringify(i,null,1))}}))}}return n}));
//# sourceMappingURL=index.min.js.map
