!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("mocha"),require("auto-api-client-js"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["mocha","auto-api-client-js","fs","path"],e):(t="undefined"!=typeof globalThis?globalThis:t||self)["mocha-applause-reporter"]=e(t.mocha,t.autoApiClientJs,t.fs,t.path)}(this,(function(t,e,s,i){"use strict";const n=require(process.cwd()+"/applause.json");class a extends t.reporters.Base{get isSynchronised(){return void 0!==this.autoapi&&0===this.autoapi.getCallsInFlight}constructor(s){super(s),this.uidToResultIdMap={},this.autoapi=new e.AutoApi({clientConfig:{baseUrl:n.baseUrl,apiKey:n.apiKey},productId:n.productId,groupingName:n.groupingName}),s.on(t.Runner.constants.EVENT_TEST_BEGIN,(t=>{this.uidToResultIdMap[t.id]=this.autoapi.startTestCase(t.fullTitle()).then((t=>t.data.testResultId))})).on(t.Runner.constants.EVENT_TEST_PASS,(t=>{this.submitTestResult(t.id,e.TestResultStatus.PASSED)})).on(t.Runner.constants.EVENT_TEST_FAIL,((t,s)=>{this.submitTestResult(t.id,e.TestResultStatus.FAILED,s.message)})).once(t.Runner.constants.EVENT_RUN_END,(()=>{this.runnerEnd()}))}async submitTestResult(t,e,s){return this.autoapi.submitTestResult(await this.uidToResultIdMap[t],e,s)}async runnerEnd(){const t=Object.values(this.uidToResultIdMap);let e=[];await Promise.all(t).then((t=>e=null==t?[]:t)).catch((t=>{console.error(`Unable to retrieve Applause TestResultIds ${t.message}`)}));const n=(await this.autoapi.getProviderSessionLinks(e)).data||[];if(n.length>0){console.info(JSON.stringify(n));const t=".";s.writeFileSync(i.join(t,"providerUrls.txt"),JSON.stringify(n,null,1))}}}return a}));
//# sourceMappingURL=index.min.js.map
